.form {

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;  // Best practice - more padding on sides of elements like this, buttons etc. Makes it look more natural
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;
    border-bottom:3px solid transparent; // Setting shadow here in the normal state as well to offset the shadow that appears in the focus state (so bottom inout doesn't push down)
    width: 90%;
    display: block;
    transition: all .3s;

    &:focus {

      /* TRICK: INPUT STYLING WITH BORDER AT BOTTOM ON FOCUS
        INCLUDED BEST PRACTICE: FOR ACCESSIBILITY REASONS I.E. PERSONS USING WEBSITE WITH JUST A KEYBOARD,
        Setting a box shadow and border bottom to highlight which input is in focus
        Can't just leave outline set to none!
       */

      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom:3px solid $color-primary;
    }

    //TRICK - HANDLE INVALID INPUT STYING - CHANGE COLOR IF INPUT IS NOT CORRECT
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    //STYLING THE INPUT TEXT (pseudo element) - WILL ONLY WORK ON SAFARI AND CHROME
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }

  }

  // TRICK - MAKE INOUT FLY OUT WHEN USER STARTS TYPING -pt1
  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top:  .7rem;
    display: block;
    transition:  all .3s;
  }

  // TRICK - MAKE INOUT FLY OUT WHEN USER STARTS TYPING -pt2
  //Use the adjacent siblig selector to target
  //Using + instead of ~ as there are only two elements. ~ if there were elements inbetween
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  // TRICK - CUSTOM RADIO BUTTONS. HIDE ORIGINAL AND SHOW CUSTOM


  &__radio-group {
    width: 49%;
    display: inline-block;
    //float: left;
    // TODO:SEE ABOUT NOT BEING ABLE TO HAVE BUTTONS SIDE BY SIDE WITHOUT FLOAT
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;

    // Created pseudo to represent the inner element of radio
    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity:0;
      transition: opacity .2s;
    }

  }

  /* logic - as soon as the radio is checked, the pseudo class checked becomes available,
  select the sibling of the checked radio then the child because that what needs to be changed once the radio is selected
  change the opacity from 0 to 1 so it is shown
   */
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }

}