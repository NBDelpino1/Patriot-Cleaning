.form {

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;  // Best practice - more padding on sides of elements like this, buttons etc. Makes it look more natural
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;
    border-bottom:3px solid transparent; // Setting shadow here in the normal state as well to offset the shadow that appears in the focus state (so bottom inout doesn't push down)
    width: 90%;
    display: block;

    &:focus {

      /* TRICK: INPUT STYLING WITH BORDER AT BOTTOM ON FOCUS
        INCLUDED BEST PRACTICE: FOR ACCESSIBILITY REASONS I.E. PERSONS USING WEBSITE WITH JUST A KEYBOARD,
        Setting a box shadow and border bottom to highlight which input is in focus
        Can't just leave outline set to none!
       */

      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom:3px solid $color-primary;
    }

    //TRICK - HANDLE INVALID INPUT STYING - CHANGE COLOR IF INPUT IS NOT CORRECT
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    //STYLING THE INPUT TEXT (pseudo element) - WILL ONLY WORK ON SAFARI AND CHROME
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }

  }

  // TRICK - MAKE INOUT FLY OUT WHEN USER STARTS TYPING -pt1
  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top:  .7rem;
    display: block;
    transition:  all .3s;
  }

  // TRICK - MAKE INOUT FLY OUT WHEN USER STARTS TYPING -pt2
  //Use the adjacent siblig selector to target
  //Using + instead of ~ as there are only two elements. ~ if there were elements inbetween
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

}